// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  binaryTargets = ["native", "debian-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id Int @id @default(autoincrement())
  name String
  email String @unique
  password String @default("")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  feedback Feedback[]
}

model Product {
  id Int @id @default(autoincrement())
  name String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  feedback Feedback[]
}

enum FeedbackStatus {
  PENDING
  APPROVED
  REJECTED
}

enum Rating {
  ONE_STAR
  TWO_STARS
  THREE_STARS
  FOUR_STARS
  FIVE_STARS
}

model Feedback {
  id Int @id @default(autoincrement())
  content String
  rating Rating
  userId Int 
  productId Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  status FeedbackStatus @default(PENDING)
  user User @relation(fields: [userId], references: [id])
  product Product @relation(fields: [productId], references: [id])

  @@index([userId])
  @@index([productId])
  @@index([userId, productId], name: "unique_feedback")
}